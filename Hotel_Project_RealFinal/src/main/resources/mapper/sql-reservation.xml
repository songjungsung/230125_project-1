<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hotel.mapper.ReservationMapper">

<!-- <호텔 예약 시스템 쿼리> -->
<!-- 예약 정보를 파라미터 값으로 받아서, 반환타입으로 출력 -->
	<select id="reservation" parameterType="hotel.dto.ReservationDto" resultType="hotel.dto.ReservationDto">
		select user_name, reservation_contact, room_type, check_in, check_out, pool_reservation 
		  from t_reservation
		 where user_name = #{userName} and reservation_contact = #{reservationContact}
	</select>
	
<!-- 예약 리스트를 출력 -->

	
<!-- 예약 정보를 insert해주는 쿼리 (입력값 받아서) -->
	<insert id="insertReservation"
		parameterType="hotel.dto.ReservationDto">
		insert into t_reservation (user_name, reservation_contact, check_in, room_type, pool_reservation, check_out)
		values ( #{userName}, #{reservationContact}, #{checkIn}, #{roomType},#{poolReservation}, #{checkOut})
	</insert>
	
<!-- 중복예약방지하는 쿼리 -->
	<select id="checkDuplicate" parameterType="hotel.dto.ReservationDto" resultType="hotel.dto.ReservationDto">
		select user_name, reservation_contact, check_in, room_type, pool_reservation, check_out
		from t_reservation
		where (check_in between #{checkIn} and #{checkOut}
		or check_out between #{checkIn} and #{checkOut})
		and room_type=#{roomType} 
		and user_name=#{userName}
		union
		select user_name, reservation_contact, check_in, room_type, pool_reservation, check_out
		from t_reservation
		where (<![CDATA[ check_in > #{checkIn}]]>)
		and (<![CDATA[ check_out < #{checkOut}]]>)
		and room_type=#{roomType} 
		and user_name=#{userName}
		LIMIT 1
	</select>
									
<!-- <예약 조회 시스템 쿼리> -->
<!-- 예약 조회 정보를 보여주는 쿼리 -->
	<select id="checkReservationInfo"
	    parameterType="hotel.dto.ReservationDto"
	    resultType="hotel.dto.ReservationDto">
		select reservation_idx, user_name, reservation_contact, room_type, check_in, check_out, pool_reservation
		from t_reservation
		where user_name = #{userName} and reservation_contact = #{reservationContact}
	</select>
	
<!-- checkIdx를 파라미터 값으로 받아서 Dto에 넣어주는 쿼리 -->
	<select id="CheckReservation"
		resultType="hotel.dto.ReservationDto">
		SELECT user_name, reservation_contact, room_type, check_in, check_out, pool_reservation
		FROM t_reservation 
		where user_name = #{userName} and reservation_contact = #{reservationContact} 
	</select>
	
   <!-- 검색 조건과 일치하는 게시물 개수를 조회 -->
	<select id="selectReservationListCount" resultType="int">
		select count(*)
		  from t_reservation
		 where user_name = #{userName} and reservation_contact = #{reservationContact} 
	</select> 
   
   <!-- 페이징 처리 -->
   <select id="selectReservationList"
	    parameterType="hotel.dto.ReservationDto" resultType="hotel.dto.ReservationDto">
      	select reservation_idx, user_name, check_in, room_type, pool_reservation, check_out, reservation_contact
        from t_reservation
        where (user_name = #{userName} and reservation_contact = #{reservationContact})
        order by reservation_idx desc
        limit 10
   </select> 
</mapper>